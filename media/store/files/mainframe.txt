/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package pl.edu.wat.wcy.pz.w1;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.HeadlessException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;

/**
 *
 * @author MSI
 */
public class MainFrame extends JFrame implements Runnable {

    public MainFrame(String string) throws HeadlessException {
        super(string);
        animator = new Thread(this);
        animator.start();
    }

    private boolean isGameOver = false;
    private Thread animator;

    //obiekty gry
    private int ballX, ballY = 0;
    private int ballW = 20;
    private int ballH = 20;
    private int ballDX = 2;
    private int ballDY = 2;

    private int padUserX, padUserY = 0;

    private void initElements() {
        ballX = this.getWidth() / 2 - ballW / 2;
        ballY = this.getHeight() / 2 - ballH / 2;
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
        g.setColor(Color.white);
        g.fillRect(0, 0, getWidth(), getHeight());
        g.setColor(Color.red);
        g.drawOval(ballX, ballY, ballW, ballH);

    }

    @Override
    public void run() {
        initElements();
        while (!isGameOver) {
            // logika gry
            ballX = ballX + ballDX;
            ballY += ballDY;
            if (ballX <= 0) {
                ballX = 0;
                ballDX = -ballDX;
            }
            if (ballX + ballW >= getWidth()) {
                ballX = getWidth() - ballW;
                ballDX = -ballDX;
            }
            if (ballY <= 0) {
                ballY = 0;
                ballDY = -ballDY;
            }
            if (ballY + ballH >= getHeight()) {
                ballY = getHeight() - ballH;
                ballDY = -ballDY;
            }

            // obs≈Çuga interakcji
            // odrysowanie
            this.repaint();
            try {
                // dostosowanie FPS
                Thread.sleep(10);
            } catch (InterruptedException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }

}
